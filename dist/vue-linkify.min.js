function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
/*global define*/
import linkify from 'linkifyjs/html';
(function () {
  var linkifiedDirective = {
    mounted: function mounted(el, binding) {
      el.innerHTML = linkify(el.innerHTML, binding.value);
    },
    updated: function updated(el, binding) {
      el.innerHTML = linkify(el.innerHTML, binding.value);
    },
    // Vue 2 compatibility
    bind: function bind(el, binding) {
      el.innerHTML = linkify(el.innerHTML, binding.value);
    },
    update: function update(el, binding) {
      el.innerHTML = linkify(el.innerHTML, binding.value);
    }
  };
  if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === 'object') {
    module.exports = linkifiedDirective;
  } else if (typeof define === 'function' && define.amd) {
    define([], function () {
      return linkifiedDirective;
    });
  } else if (window.Vue) {
    window.Vue.directive('linkified', linkifiedDirective);
  }
})();
